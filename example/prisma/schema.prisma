// Enhanced schema.prisma with relationships
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id        Int       @id @default(autoincrement())
  name      String
  email     String    @unique
  role      String    @default("user")
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  
  // Relationships
  posts     Post[]
  comments  Comment[]
  profile   Profile?
  
  @@map("users")
}

model Profile {
  id       Int     @id @default(autoincrement())
  bio      String?
  avatar   String?
  userId   Int     @unique
  user     User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  @@map("profiles")
}

model Post {
  id        Int       @id @default(autoincrement())
  title     String
  content   String
  published Boolean   @default(false)
  authorId  Int
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  
  // Relationships
  author    User      @relation(fields: [authorId], references: [id], onDelete: Cascade)
  comments  Comment[]
  tags      Tag[]
  
  @@map("posts")
}

model Comment {
  id        Int      @id @default(autoincrement())
  content   String
  authorId  Int
  postId    Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  // Relationships
  author    User     @relation(fields: [authorId], references: [id], onDelete: Cascade)
  post      Post     @relation(fields: [postId], references: [id], onDelete: Cascade)
  
  @@map("comments")
}

model Tag {
  id    Int    @id @default(autoincrement())
  name  String @unique
  color String @default("#000000")
  
  // Many-to-many relationship
  posts Post[]
  
  @@map("tags")
}

model Category {
  id          Int      @id @default(autoincrement())
  name        String   @unique
  description String?
  parentId    Int?
  createdAt   DateTime @default(now())
  
  // Self-referencing relationship
  parent      Category? @relation("CategoryHierarchy", fields: [parentId], references: [id])
  children    Category[] @relation("CategoryHierarchy")
  
  @@map("categories")
}

model Tagone {
  id    Int    @id @default(autoincrement())
  name  String @unique
  color String @default("#000000")
}
